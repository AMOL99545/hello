#include <stdio.h>
#include <conio.h>
#include <string.h>
#include <stdlib.h>

struct food{
    char name[50];
    float calo;
};

struct get{
    char name[50];
    float gm;
    float cal;
};


void addrec(){
    FILE *fp;
    struct food fo;
    char pw[50];
    int i,n;
    fp=fopen("foodref.txt","w");
    printf("Enter the password");
    gets(pw);
    if (strcmp(pw,"123@admin")!=0){
        printf("Error!Password mismatch");
        exit(1);
    }
    printf("Enter the number of food to write:");
    scanf("%d",&n);
    for(i=0;i<n;i++){
        printf("Enter for food item %d",i+1);
        printf("Enter the name of the food");
        scanf("%s",&fo.name);
        printf("\nEnter the amount of calories per 100 gm ");
        scanf("%f",&fo.calo);
        fprintf(fp,"%s\t%f\n",fo.name,fo.calo);
    }
    printf("File written!");
    fclose(fp);
}

void giverec(){
    //user gives food data data
    struct get ufo;
    FILE *up;
    int i,ns;
    up=fopen("reffood.txt","w");
    printf("Enter the number of food you want to check");
    scanf("%d",&ns);
    printf("\nEnter the data");
        for(i=0;i<ns;i++){
        printf("Enter for food item %d",i+1);
        printf("Enter the name of the food");
        scanf("%s",&ufo.name);
        printf("Enter the weight of food(in gram)");
        scanf("%f",&ufo.gm);
    }
    calculate(ufo);
}


void calculate(struct get ufo){
	int n=-1,i,c=0;
	float cal;
    FILE *fp;
    struct food fo;
    fp=fopen("foodref.txt","r");
    
    while(!feof(fp))
    {
    	fread(&fo[++n],sizeof(struct food),1,fp);
    	c++;
	}
	for(i=0;i<c;i++)
	{
		if(strcmp(ufo.name,fo[i].name)==0)
		{
			ufo.cal=ufo.gm*fo[i].calo;
			fwrite(&ufo,sizeof(ufo),1,up);
		}
	}


}

int main(){
    int n;

    printf("What do you want to do\n");
    printf("1.Write food items");//user
    printf("2.Add food items");//admin main file
    printf("3.Check recommended amount of your calories");
    scanf("%d",&n);
    switch(n){
        case 1:
            giverec();
        break;

        case 2:
            addrec();
        break;

        case 3:
            calculate();
        break;

        default:
            printf("Invalid choice");
    }
}
